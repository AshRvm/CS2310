CHIP CSA8UnsignedMultiplicator{
    IN a[8],b[8];
    OUT p[8],of;

    PARTS:
    And8(a=a,b=b[0],out=pp0);
    And8(a=a,b=b[1],out=pp1);
    And8(a=a,b=b[2],out=pp2);
    And8(a=a,b=b[3],out=pp3);
    And8(a=a,b=b[4],out=pp4);
    And8(a=a,b=b[5],out=pp5);
    And8(a=a,b=b[6],out=pp6);
    And8(a=a,b=b[7],out=pp7);

    //level_0:
    CSA16Unsigned(in1[0..7]=pp0,in2[1..8]=pp1,carryIn[2..9]=pp2,sum=s0,carryOut=c0);
    CSA16Unsigned(in1[3..10]=pp3,in2[4..11]=pp4,carryIn[5..12]=pp5,sum=s1,carryOut=c1);

    //levl_1:
    CSA16Unsigned(in1=s0,in2=c0,carryIn=s1,sum=s2,carryOut=c2);
    CSA16Unsigned(in1=c1,in2[6..13]=pp6,carryIn[7..14]=pp7,sum=s3,carryOut=c3);

    //level_2:
    CSA16Unsigned(in1=s2,in2=c2,carryIn=s3,sum=s4,carryOut=c4);

    //level_3:
    CSA16Unsigned(in1=s4,in2=c4,carryIn=c3,sum=s5,carryOut=c5);

    //CLA16Adder:
    CLA164Hu(a=s5,b=c5,AS=false,s[0..7]=p,s[8]=temp1,s[9]=temp2,s[10]=temp3,s[11]=temp4,s[12]=temp5,s[13]=temp6,s[14]=temp7,s[15]=temp8,of=tempNull);

    //Overflow:
    Or(a=temp1,b=temp2,out=tempOf1);
    Or(a=temp3,b=tempOf1,out=tempOf2);
    Or(a=temp4,b=tempOf2,out=tempOf3);
    Or(a=temp5,b=tempOf3,out=tempOf4);
    Or(a=temp6,b=tempOf4,out=tempOf5);
    Or(a=temp7,b=tempOf5,out=tempOf6);
    Or(a=temp8,b=tempOf6,out=of);


}