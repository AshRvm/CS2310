CHIP MPLY9CSAuFP  {
    IN  a[9], b[9];
    OUT p[18];

    PARTS:
    And9b1(a=a, b=b[0], out=pp0);
    And9b1(a=a, b=b[1], out=pp1);
    And9b1(a=a, b=b[2], out=pp2);
    And9b1(a=a, b=b[3], out=pp3);
    And9b1(a=a, b=b[4], out=pp4);
    And9b1(a=a, b=b[5], out=pp5);
    And9b1(a=a, b=b[6], out=pp6);
    And9b1(a=a, b=b[7], out=pp7);
    And9b1(a=a, b=b[8], out=pp8);

    //level_0: (pp0 pp1 pp2) (pp3 pp4 pp5) (pp6 pp7 pp8) -> s00 c00 s01 c01 s02 c02
    CSA18u(a[0..8]=pp0,  b[1..9]=pp1,  ci[2..10]=pp2,  s=s00, co[0..16]=c00);
    CSA18u(a[3..11]=pp3, b[4..12]=pp4, ci[5..13]=pp5,  s=s01, co[0..16]=c01);
    CSA18u(a[6..14]=pp6, b[7..15]=pp7, ci[8..16]=pp8,  s=s02, co[0..16]=c02);

    //level_1: (s00 c00 s01) (c01 s02 c02) -> s10 c10 s11 c11
    CSA18u(a=s00,	      b[1..17]=c00,	ci=s01,	s=s10,	co[0..16]=c10);
    CSA18u(a[1..17]=c01,  b=s02,	    ci=c02, s=s11,	co[0..16]=c11);

    //level_2: (s10 c10 s11) c11 -> s20 c20 c11
    CSA18u(a=s10, b[1..17]=c10, ci=s11, s=s20, co[0..16]=c20);

    //level_3: (s20 c20 c11) -> s30 c30
    CSA18u(a=s20, b[1..17]=c20, ci[1..17]=c11, s=s30, co[0..16]=c30);

    //CLA18Adder:
    CLA184Ha(a=s30, b[1..17]=c30, AS=false, s=p);

    //overflow not necessary to be checked
}