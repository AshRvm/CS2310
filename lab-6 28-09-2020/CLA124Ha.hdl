CHIP CLA124Ha  {
	//unsigned, does not indicate overflow

	//ci: carry-in, co: carry-out
	IN		a[12], b[12], AS;
	OUT		s[12], co;

	PARTS:
	//p[0-9]+ : Pi
	//P([0-9]+)b([0-9]+) : P[\1..\2]

	//extra step: Invert b-input if AS is active
	Xor4b1(a=b[0..3],   b=AS, out=b0b3);
	Xor4b1(a=b[4..7],   b=AS, out=b4b7);
	Xor4b1(a=b[8..11],  b=AS, out=b8b11);

	//////////    t = 1tau: Pi, Gi    //////////
	//generate all the pi, gi terms
	CLA4PGO(a=a[0..3], b=b0b3,
			p=P0b3, p[0]=p0, p[1]=p1, p[2]=p2, p[3]=p3,
			g=G0b3, g[0]=g0, g[1]=g1, g[2]=g2, g[3]=g3);
	CLA4PGO(a=a[4..7], b=b4b7,
			p=P4b7, p[0]=p4, p[1]=p5, p[2]=p6, p[3]=p7,
			g=G4b7, g[0]=g4, g[1]=g5, g[2]=g6, g[3]=g7);
	CLA4PGO(a=a[8..11], b=b8b11,
			p=P8b11, p[0]=p8, p[1]=p9, p[2]=p10, p[3]=p11,
			g=G8b11, g[0]=g8, g[1]=g9, g[2]=g10, g[3]=g11);

	//////////    t = 2tau: PiI    //////////
	//p0i, p1i, p2i
	And4(a=p0,  b=p1,  c=p2,  d=p3,  out=p0i);
	And4(a=p4,  b=p5,  c=p6,  d=p7,  out=p1i);
	And4(a=p8,  b=p9,  c=p10, d=p11, out=p2i);

	//////////    t = 3tau: GiI    //////////
	//g0i
	And(a=p3,  b=g2, out=p3g2);
	And3(a=p3, b=p2, c=g1, out=p3p2g1);
	And4(a=p3, b=p2, c=p1, d=g0, out=p3p2p1g0);
	Or4(a=p3p2p1g0, b=p3p2g1, c=p3g2, d=g3, out=g0i);

	//g1i
	And(a=p7,  b=g6, out=p7g6);
	And3(a=p7, b=p6, c=g5, out=p7p6g5);
	And4(a=p7, b=p6, c=p5, d=g4, out=p7p6p5g4);
	Or4(a=p7p6p5g4, b=p7p6g5, c=p7g6, d=g7, out=g1i);

	//g2i
	And(a=p11,  b=g10, out=p11g10);
	And3(a=p11, b=p10, c=g9, out=p11p10g9);
	And4(a=p11, b=p10, c=p9, d=g8, out=p11p10p9g8);
	Or4(a=p11p10p9g8, b=p11p10g9, c=p11g10, d=g11, out=g2i);

	//////////    t = 5tau: C4i    //////////
	//c4
	AndOr(a0=p0i, a1=AS, b=g0i, out=c4);

	//c8
	And(a=p1i,  b=g0i, out=p1ig0i);
	And3(a=p1i, b=p0i, c=AS, out=p1ip0ic0);
	Or3(a=p1ip0ic0, b=p1ig0i, c=g1i, out=c8);

	//////////    t = 7tau: C(4i+k), Si    //////////
	CLA4PGIa(p=P0b3,   g=G0b3,   ci=AS,  s=s[0..3]);
	CLA4PGIa(p=P4b7,   g=G4b7,   ci=c4,  s=s[4..7]);
	CLA4PGIa(p=P8b11,  g=G8b11,  ci=c8,  s=s[8..11]);
}