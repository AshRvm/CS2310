CHIP CLA4  {
	//ci: carry-in, co: carry-out
	IN 		x[4], y[4], ci;
	OUT		s[4], co;

	PARTS:
	//p[i]
    Xor(a=x[0], b=y[0], out=p0);
    Xor(a=x[1], b=y[1], out=p1);
    Xor(a=x[2], b=y[2], out=p2);
    Xor(a=x[3], b=y[3], out=p3);

    //g[i]
    And(a=x[0], b=y[0], out=g0);
    And(a=x[1], b=y[1], out=g1);
    And(a=x[2], b=y[2], out=g2);
    And(a=x[3], b=y[3], out=g3);

    //c[1]
    And(a=p0,     b=ci, out=temp00);
    Or (a=temp00, b=g0, out=c1);

    //c[2]
    And(a=p0,     b=p1,     out=temp10);
    And(a=temp10, b=ci,     out=temp11);
    And(a=p1,     b=g0,     out=temp12);
    Or (a=temp11, b=temp12, out=temp13);
    Or (a=temp13, b=g1,     out=c2);

    //c[3]
    And(a=p2,       b=p1,       out=temp20);
    And(a=temp20,   b=p0,       out=temp21);
    And(a=temp21,   b=ci,       out=temp22);
    And(a=p2,       b=p1,       out=temp23);
    And(a=temp23,   b=g0,       out=temp24);
    And(a=p2,       b=g1,       out=temp25);
    Or (a=temp22,   b=temp24,   out=temp26);
    Or (a=temp26,   b=temp25,   out=temp27);
    Or (a=temp27,   b=g2,       out=c3);

    //co 
    And(a=p3,     b=p2,     out=temp30);
    And(a=temp30, b=p1,     out=temp31);
    And(a=temp31, b=p0,     out=temp32);
    And(a=temp32, b=ci,     out=temp33);
    And(a=temp31, b=g0,     out=temp34);
    And(a=temp30, b=g1,     out=temp35);
    And(a=p3,     b=g2,     out=temp36);
    Or (a=temp33, b=temp34, out=temp37);
    Or (a=temp37, b=temp35, out=temp38);
    Or (a=temp38, b=temp36, out=temp39);
    Or (a=temp39, b=g3,     out=co);

    //s[i]
    Xor(a=p0, b=ci, out=s[0]);
    Xor(a=p1, b=c1, out=s[1]);
    Xor(a=p2, b=c2, out=s[2]);
    Xor(a=p3, b=c3, out=s[3]);
}
