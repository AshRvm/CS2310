CHIP PMux4Way2  {
	IN x0[2], x1[2], x2[2], x3[2], r0, r1, r2, r3;
	OUT y[2];

	PARTS:
	//s1, s0 are internal
	Not(in=r0,out=notr0);
	Not(in=r1,out=notr1);
	Not(in=r2,out=notr2);

	And(a=notr0,b=notr1,out=s1);
	And(a=notr0,b=notr2,out=temp1);
	And(a=notr0,b=r1,out=temp2);
	Or (a=temp1,b=temp2,out=s0);

	Not(in=s0,out=nots0);
	Not(in=s1,out=nots1);

	And(a=nots1,b=nots0,out=priority0);
	And(a=nots1,b=s0,out=priority1);
	And(a=s1,b=nots0,out=priority2);
	And(a=s1,b=s0,out=priority3);

	And(a=priority0,b=x0[1],out=bitOne0);
	And(a=priority1,b=x1[1],out=bitOne1);
	And(a=priority2,b=x2[1],out=bitOne2);
	And(a=priority3,b=x3[1],out=bitOne3);

	And(a=priority0,b=x0[0],out=bitZero0);
	And(a=priority1,b=x1[0],out=bitZero1);
	And(a=priority2,b=x2[0],out=bitZero2);
	And(a=priority3,b=x3[0],out=bitZero3);

	Or(a=bitOne0,b=bitOne1,out=tempOne1);
	Or(a=bitOne2,b=bitOne3,out=tempOne2);
	Or(a=tempOne1,b=tempOne2,out=y[1]);

	Or(a=bitZero0,b=bitZero1,out=tempZero1);
	Or(a=bitZero2,b=bitZero3,out=tempZero2);
	Or(a=tempZero1,b=tempZero2,out=y[0]);

}